#MAKE_BIN#

#LOAD_SEGMENT=FFFFH#
#LOAD_OFFSET=0000H#

#CS=0000H#
#IP=0000H#

#DS=0000H#
#ES=0000H#

#SS=0000H#
#SP=FFFEH#

#AX=0000H#
#BX=0000H#
#CX=0000H#
#DX=0000H#
#SI=0000H#
#DI=0000H#
#BP=0000H#

;DATA
        JMP    START 
        DB     1021 DUP(0)

	    PORTINA		EQU 3000H
		PORTINB		EQU 3002H
		PORTINC		EQU 3004H
		CREGIN    	EQU 3006H

		PORTOUTA	EQU 4000H
		PORTOUTB	EQU 4002H
		PORTOUTC	EQU 4004H
		CREGOUT		EQU	4006H
		
		CLKA		EQU 5000H
		CLKB		EQU 5002H
		CLKC		EQU 5004H
		CREGCLK    	EQU 5006H
		
		DATA		DB 3 DUP(0FFH)
		DOUT		DB 3 DUP(00H)
		
		LBTN		DB 00H
		FBTNUP		DB 00H
		FBTNDN		DB 00H
		FSENS		DB 00H
		CSENSUP		DB 00H
		CSENSDN		DB 00H
		DBTN		DB 00H
		DSENS		DB 00H
		
		FBVUP		DB 00H
		FBVDN		DB 00H
		TGTS		DB 00H
		
		MOTOR		DB 00H
		DCTRL		DB 00H
		PWM			DB 00H
		PWM0		DB 00H
		SEG1		DB 00H
		SEG2		DB 00H

;CODE
START:  MOV AX,0200H
        MOV DS,AX
        MOV ES,AX
        MOV SS,AX
        MOV SP,0FFEH
		;PORT INITIALIZE
		MOV AL, 9BH
		MOV DX, CREGIN
		OUT DX, AL
		MOV AL, 80H
		MOV DX, CREGOUT
		OUT DX, AL
		;PWM INITIALIZE
		MOV AL, 00010100B
		MOV DX, CREGCLK
		OUT DX, AL
		MOV DX, CLKA
		MOV AL, 04H
		OUT DX, AL
		MOV AL, 01010010B
		MOV DX, CREGCLK
		OUT DX, AL
		MOV DX, CLKB
		MOV AL, PWM
		INC AL
		OUT DX, AL
		MOV AL, 10011000B
		MOV DX, CREGCLK
		OUT DX, AL

;LOOP
X1: ;INPUT
		MOV DX, PORTINA
		IN	AL, DX
		LEA BX, DATA
		MOV [BX], AL
		INC BX
		MOV DX, PORTINB
		IN	AL, DX
		MOV [BX], AL
		INC BX
		MOV DX, PORTINC
		IN	AL, DX
		MOV [BX], AL
		
	;SORT OUT THE INPUTS
		
		;LOAD DATA + 0
		LEA SI, DATA
		MOV AL, [SI]
		NOT AL
		
		;DSENS
		MOV BL, 10000000B
		AND BL, AL
		MOV CL, 1
		ROL BL, CL
		LEA DI, DSENS
		MOV [DI], BL
		
		;DBTN
		MOV BL, 01000000B
		AND BL, AL
		MOV CL, 2
		ROL BL, CL
		LEA DI, DBTN
		MOV [DI], BL
		
		;CSENSDN
		MOV BL, 00111000B
		AND BL, AL
		MOV CL, 2
		ROR BL, CL
		LEA DI, CSENSDN
		MOV [DI], BL
		
		;CSENSUP
		MOV BL, 00000111B
		AND BL, AL
		LEA DI, CSENSUP
		MOV [DI], BL
		
		;LOAD DATA + 1
		INC SI
		MOV AL, [SI]
		NOT AL
		
		;LBTN
		MOV BL, 11110000B
		AND BL, AL
		MOV CL, 4
		ROR BL, CL
		LEA DI, LBTN
		MOV DL, [DI]
		OR	BL, DL
		MOV [DI], BL
		
		;FSENS
		MOV BL, 00001111B
		AND BL, AL
		LEA DI, FSENS
		MOV [DI], BL
		
		;LOAD DATA + 2
		INC SI
		MOV AL, [SI]
		NOT AL
		
		;FBTNDN
		MOV BL, 00111000B
		AND BL, AL
		MOV CL, 2
		ROR BL, CL
		LEA DI, FBTNDN
		MOV DL, [DI]
		OR	BL, DL
		MOV [DI], BL
		
		;FBTNUP
		MOV BL, 00000111B
		AND BL, AL
		LEA DI, FBTNUP
		MOV DL, [DI]
		OR	BL, DL
		MOV DL, [DI]
		OR	BL, DL
		MOV [DI], BL
		
	;LOGIC
		
		;FBVUP
		LEA SI, LBTN
		MOV AL, [SI]
		LEA SI, FBTNUP
		MOV AH, [SI]
		OR	AL, AH
		OR	AL, 00001000B
		LEA DI, FBVUP
		MOV [DI], AL
		
		;FBVDN
		LEA SI, LBTN
		MOV AL, [SI]
		LEA SI, FBTNDN
		MOV AH, [SI]
		OR	AL, AH
		OR	AL, 00000001B
		LEA DI, FBVDN
		MOV [DI], AL
		
		;TGTS
		MOV BL, TGTS
		LEA SI, LBTN
		MOV AL, [SI]
		LEA SI, FBTNUP
		MOV AH, [SI]
		OR	AL, AH
		LEA SI, FBTNDN
		MOV AH, [SI]
		OR	AL, AH
		LEA DI, TGTS
		MOV [DI], AL
		CMP BL, 0
		JNZ SLEEP
		CMP AL, 0
		JZ  SLEEP
		MOV AL, FSENS
		CMP AL, 01H
		JNZ SLEEP
		MOV DX, CLKC
		MOV AL, 32H
		OUT DX, AL
		SLEEP:
		
		;SEG1
		LEA DI, SEG1
		MOV AL, FSENS
		CMP AL, 00H
		JZ DEND
		CMP AL, 01H
		JZ D0
		CMP AL, 02H
		JZ D1
		CMP AL, 04H
		JZ D2
		CMP AL, 08H
		JZ D3
		D0:	MOV BL, 0
			MOV [DI], BL
			JMP DEND
		D1:	MOV BL, 1
			MOV [DI], BL
			JMP DEND
		D2:	MOV BL, 2
			MOV [DI], BL
			JMP DEND
		D3:	MOV BL, 3
			MOV [DI], BL
			JMP DEND
		DEND:
		
		;DCTRL
		LEA DI, DCTRL
		MOV AL, [DI]
		MOV AH, DBTN
		OR	AL, AH
		MOV [DI], AL
		
		;STARTUP DECIDE
		MOV AL, PWM
		MOV AH, 0
		CMP AL, AH
		JNZ NOSTART
		MOV AL, DSENS
		MOV AH, 0
		CMP AL, AH
		JZ NOSTART
		MOV AL, DCTRL
		MOV AH, 0
		CMP AL, AH
		JZ NOSTART
		MOV AL, FSENS
		MOV AH, 01H
		CMP AL, AH
		JNZ DOSTART
		MOV AL, TGTS
		MOV AH, 00H
		CMP AL, AH
		JNZ DOSTART
		JMP NOSTART
		DOSTART:	CALL DIRECT
					CALL SLOW
					JMP AEND
		NOSTART:
		
		;TEST MOTOR DIRECTION AND DECIDE STOP/SPEED UP
		;JUST STARTING?
		
		LEA SI, MOTOR
		MOV AL, [SI]
		MOV AH, 0
		CMP AH, AL
		JNZ A1
		JZ  A2
		
		A1:	;STOP?
			MOV AL, FBVUP
			MOV AH, CSENSDN
			AND AL, AH
			MOV AH, 0
			CMP AL, AH
			JZ A3
			A3X:
			CALL STOP
			JMP AEND
			A3:		;NO TARGETS ABOVE?
			MOV AL, CSENSDN
			MOV CL, 1
			ROL AL, CL
			DEC AL
			MOV AH, TGTS
			CMP AH, AL
			JLE A3X
			;SPEED UP?
			MOV AL, CSENSUP
			MOV AH, CSENSDN
			MOV BL, FSENS
			AND BL, 00000001B
			OR	AH, BL
			AND AL, AH
			MOV AH, 0
			CMP AL, AH
			JNZ A5
			CALL FAST
			A5:
			JMP AEND
		
		A2:	;STOP?
			MOV AL, FBVDN
			MOV AH, CSENSUP
			AND AL, AH
			MOV AH, 0
			CMP AL, AH
			JZ A4
			CALL STOP
			JMP AEND
			A4:
			;SPEED UP?
			MOV AL, CSENSDN
			MOV AH, CSENSUP
			MOV BL, FSENS
			AND BL, 00001000B
			OR	AH, BL
			AND AL, AH
			MOV AH, 0
			CMP AL, AH
			JNZ A6
			CALL FAST
			A6:
			JMP AEND
		AEND:
	
		;SEG2
		LEA SI, MOTOR
		LEA DI, SEG2
		MOV BL, SEG1
		MOV AL, [SI]
		MOV AH, 0
		CMP AH, AL
		JNZ S1
		JZ  S2
		S1:	CMP BL, 3
			JZ S3
			INC BL
			S3:
			JMP SEND
		S2:	CMP BL, 0
			JZ S4
			DEC BL
			S4:
			JMP SEND
		SEND:
		MOV [DI], BL
	
	;SORT OUT THE OUTPUTS
		
		;LOAD DOUT + 0
		LEA DI, DOUT
		MOV AL, FBTNUP
		MOV BL, FBTNDN
		MOV CL, 2
		ROL BL, CL
		OR	AL, BL
		MOV BL, DCTRL
		MOV CL, 2
		ROR BL, CL
		OR	AL, BL
		MOV BL, MOTOR
		MOV CL, 1
		ROR BL, CL
		OR	AL, BL
		MOV [DI], AL
		
		;LOAD DOUT + 1
		INC DI
		MOV AL, LBTN
		MOV BL, SEG1
		MOV CL, 4
		ROL BL, CL
		OR 	AL, BL
		MOV BL, SEG2
		MOV CL, 2
		ROR BL, CL
		OR	AL, BL
		MOV [DI], AL
		
	;OUTPUT
		LEA BX, DOUT
		MOV AL, [BX]
		MOV DX, PORTOUTA
		OUT DX, AL
		INC BX
		MOV AL, [BX]
		MOV DX, PORTOUTB
		OUT DX, AL
		INC BX
		MOV AL, [BX]
		MOV DX, PORTOUTC
		OUT DX, AL
		JMP X1

;SUBROUTINES
		STOP	PROC NEAR
				MOV AL, CSENSUP
				MOV BL, FSENS
				AND BL, 00001000B
				OR  AL, BL
				MOV AH, CSENSDN
				MOV BL, FSENS
				AND BL, 00000001B
				OR  AH, BL
				AND AL, AH
				MOV AH, 0
				CMP AL, AH
				JNZ B1
				JZ B2
				B1:	CALL FSTOP
					JMP BEND
				B2:	CALL SLOW
					JMP BEND
				BEND:
				RET
				ENDP
				
		SLOW	PROC NEAR
				LEA DI, PWM
				MOV AL, 1
				MOV [DI], AL
				CALL PWMSET
				RET
				ENDP
				
		FAST	PROC NEAR
				LEA DI, PWM
				MOV AL, 2
				MOV [DI], AL
				CALL PWMSET
				RET
				ENDP
				
		FSTOP	PROC NEAR
				MOV AL, PWM
				CMP AL, 0
				JZ	NOTIMER
				MOV DX, CLKC
				MOV AL, 32H
				OUT DX, AL
				NOTIMER:
				LEA DI, PWM
				MOV AL, 0
				MOV [DI], AL
				CALL PWMSET
				LEA DI, DCTRL
				MOV AL, 0
				MOV [DI], AL
				MOV AH, FSENS
				NOT AH
				LEA DI, FBTNUP
				MOV AL, [DI]
				AND AL, AH
				MOV [DI], AL
				LEA DI, FBTNDN
				MOV AL, [DI]
				AND AL, AH
				MOV [DI], AL
				LEA DI, LBTN
				MOV AL, [DI]
				AND AL, AH
				MOV [DI], AL
				RET
				ENDP
				
		DIRECT	PROC NEAR
				MOV AL, FSENS
				MOV AH,01H
				CMP AL, AH
				JNZ C1
				LEA DI, MOTOR
				MOV BL, 01H
				MOV [DI], BL
				C1:
				MOV AL, FSENS
				MOV AH,08H
				CMP AL, AH
				JNZ C2
				LEA DI, MOTOR
				MOV BL, 00H
				MOV [DI], BL
				C2:
				MOV AL, FSENS
				MOV AH, TGTS
				CMP AH, AL
				JG C3
				LEA DI, MOTOR
				MOV BL, 00H
				MOV [DI],BL
				C3:
				RET
				ENDP
				
		PWMSET	PROC NEAR
				MOV AL, PWM0
				MOV AH, PWM
				CMP AL, AH
				JZ ENDPWM
				LEA DI, PWM0
				MOV [DI], AH
				MOV DX, CLKB
				MOV AL, PWM
				INC AL
				OUT DX, AL
				ENDPWM:
				RET
				ENDP